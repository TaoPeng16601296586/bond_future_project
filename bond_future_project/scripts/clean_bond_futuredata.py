{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3c12a3e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "# ✅ Google Drive 路径\n",
    "CLEAN_PATH = \"/content/drive/MyDrive/quantitiave interest/data\"\n",
    "\n",
    "# 单文件清洗函数\n",
    "def clean_futures_csv(file_path: str):\n",
    "    print(f\"\\n📂 正在处理文件：{file_path}\")\n",
    "    try:\n",
    "        df = pd.read_csv(file_path, parse_dates=[\"date\"])\n",
    "    except Exception as e:\n",
    "        print(f\"❌ 读取失败：{e}\")\n",
    "        return\n",
    "\n",
    "    print(f\"✅ 原始记录数：{len(df)}\")\n",
    "\n",
    "    # 去重\n",
    "    df.drop_duplicates(subset=[\"symbol\", \"date\"], inplace=True)\n",
    "\n",
    "    # 缺失值处理\n",
    "    missing = df.isnull().sum()\n",
    "    if missing.sum() > 0:\n",
    "        print(\"⚠️ 存在缺失值：\")\n",
    "        print(missing[missing > 0])\n",
    "        df.dropna(inplace=True)\n",
    "        print(f\"✅ 已删除缺失值行，剩余 {len(df)} 条\")\n",
    "\n",
    "    # 去除价格为0或负数的记录\n",
    "    for col in [\"open\", \"high\", \"low\", \"close\"]:\n",
    "        if col in df.columns:\n",
    "            df = df[df[col] > 0]\n",
    "\n",
    "    # 成交量与持仓量非负\n",
    "    if \"volume\" in df.columns:\n",
    "        df = df[df[\"volume\"] >= 0]\n",
    "    if \"open_interest\" in df.columns:\n",
    "        df = df[df[\"open_interest\"] >= 0]\n",
    "\n",
    "    # 排序\n",
    "    if \"date\" in df.columns and \"symbol\" in df.columns:\n",
    "        df.sort_values(by=[\"date\", \"symbol\"], inplace=True)\n",
    "\n",
    "    # 保存清洗后文件\n",
    "    df.to_csv(file_path, index=False, encoding=\"utf-8-sig\")\n",
    "    print(f\"✅ 清洗完成，最终记录数：{len(df)}\")\n",
    "\n",
    "    # 统计每日跳空情况\n",
    "    df = df.sort_values(\"date\")\n",
    "    df[\"prev_close\"] = df[\"close\"].shift(1)\n",
    "    df[\"gap\"] = df[\"open\"] - df[\"prev_close\"]\n",
    "    gap_df = df[[\"date\", \"symbol\", \"open\", \"prev_close\", \"gap\"]].dropna()\n",
    "    gap_df = gap_df[gap_df[\"gap\"] != 0]\n",
    "    gap_output = file_path.replace(\".csv\", \"_gap_stats.csv\")\n",
    "    gap_df.to_csv(gap_output, index=False, encoding=\"utf-8-sig\")\n",
    "    print(f\"📈 跳空统计已保存至：{gap_output}\")\n",
    "\n",
    "# 批量清洗\n",
    "\n",
    "def batch_clean_all_csv(folder_path=CLEAN_PATH):\n",
    "    print(f\"\\n🔎 扫描目录：{folder_path}\")\n",
    "    all_csv = [f for f in os.listdir(folder_path) if f.endswith(\".csv\") and not f.endswith(\"_gap_stats.csv\")]\n",
    "\n",
    "    if not all_csv:\n",
    "        print(\"⚠️ 未发现任何 .csv 文件\")\n",
    "        return\n",
    "\n",
    "    for filename in all_csv:\n",
    "        full_path = os.path.join(folder_path, filename)\n",
    "        clean_futures_csv(full_path)\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"🚿 启动 Google Drive 国债期货数据清洗程序\")\n",
    "    batch_clean_all_csv()\n",
    "    print(\"\\n✅ 所有 .csv 文件清洗完成\")"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
